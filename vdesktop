#!/bin/bash
DIRECTORY="$(readlink -f $(dirname $0))"

if [ -z "$1" ]; then
  echo "You did not specify what to boot."
  lsblk -do PATH,MODEL,SIZE
  if [ $(id -u) -ne 0 ]; then
    echo "And you did not run this script as root user."
  fi
  echo "
Vdesktop can boot from an image file:   sudo vdesktop /home/pi/2019-09-26-raspbian-buster.img
Or a block device:                      sudo vdesktop /dev/sda
Or a Raspbian root directory:           sudo vdesktop /home/pi/old-raspbian/

A second word specifies the boot mode: cli, cli-login, and gui. If none specified, cli mode is assumed.
" | fold -s
  exit 0
# Ensure being run as root
elif [ $(id -u) -ne 0 ]; then
  echo "You did not run this script as root user."
  exit 0
fi

function cleanup {
  echo ""
  echo "Preparing to exit..."
  printf '\e]12;#AAAAAA\a' # change cursor color back to lxterminal default
  
  # unmount modifications to the guest
  umount "${mntpnt}/etc/profile" &>/dev/null
  umount "${mntpnt}/var/lib/dbus/machine-id" &>/dev/null
  umount "${mntpnt}/etc/machine-id" &>/dev/null
  
  umount -fl "${mntpnt}/boot" &>/dev/null
  umount -fl "$mntpnt" &>/dev/null
  losetup -d "$LOOP" &>/dev/null
  
  rm "${DIRECTORY}/machine-id" &>/dev/null
  echo "Unmounted and exiting..."
  machinectl poweroff vdesktop &>/dev/null
  killall vdesktop
}

trap cleanup EXIT

mntpnt="/media/pi/vdesktop" # if .img file or block device, this is default mount point
mkdir -p "${mntpnt}" &>/dev/null
umount -fl "${mntpnt}" &>/dev/null

# if user accidentally shutdown the host while guest was running, systemd masks "-.mount" by default. 
# This ensures -.mount is not masked, though it usually takes a reboot to see any effect.
systemctl unmask  -- -.mount 

# IMG FILE
if [[ "$1" == *".img" ]] && [ -f "$1" ]; then
  echo "OK, looks like you specified a disk image."
  LOOP="$(losetup -fP --show $1)"
  echo "$LOOP"
  mount -o rw "${LOOP}p2" "$mntpnt"
  mount -o rw "${LOOP}p1" "${mntpnt}/boot"

# NOT_FOUND
else
  echo "No such file or directory. Check spelling and try again."
  if [[ "$1" == "/dev/"* ]]; then
    lsblk -do PATH,MODEL,SIZE
  fi
  exit 1
fi

if [ $mntpnt == "*/" ]; then # ensure there is no trailing slash
  mntpnt=${mntpnt: :-1}
fi
mount -n -o remount,suid,rw "$mntpnt" # remount to allow root access

if diff "${mntpnt}/etc/machine-id" "/etc/machine-id" > /dev/null || [ -z $(cat "${mntpnt}/etc/machine-id" | head -n1) ]
then
  echo "Temporarily changing Machine ID"
  dbus-uuidgen --ensure="${DIRECTORY}/machine-id"
  mount --bind "${DIRECTORY}/machine-id" "${mntpnt}/var/lib/dbus/machine-id"
  mount --bind "${DIRECTORY}/machine-id" "${mntpnt}/etc/machine-id"
  # rm -f "${mntpnt}/etc/machine-id"
fi

/bin/echo -e "Your cursor color will be \e[44mblue\e[49m until the container is terminated."
echo "Booting in 5 seconds."

# terminate any previous instances of the machine in case it did not exit cleanly
machinectl terminate vdesktop &>/dev/null
machinectl poweroff vdesktop &>/dev/null

sleep 5

if [ "$2" = "cli-login" ]; then
  echo "Booting in auto-login mode."
  #change cursor color while in guest so user does not forget
  printf '\e]12;#0000AA\a'
  # boot the guest
  echo ""
  echo ""
  /usr/bin/expect -c "set timeout -1
  spawn ${DIRECTORY}/nspawn $mntpnt
  expect -re .*login:
  send -- pi\r
  expect -re .*Password:
  send -- raspberry\r
  interact ''
  expect eof"
else
  #shadow file not mounted
  #change cursor color while in guest so user does not forget
  printf '\e]12;#0000AA\a' 
  # boot the guest
  echo ""
  echo ""
  ${DIRECTORY}/nspawn $mntpnt
fi

echo ""
echo "The machine has exited, but you can still access its filesystem. Press Ctrl+C to unmount ${mntpnt}"

#change cursor color back to lxterminal default
printf '\e]12;#AAAAAA\a'
